// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityHousing.Models;

#nullable disable

namespace UniversityHousing.Migrations
{
    [DbContext(typeof(HousingContext))]
    [Migration("20230831004141_addUserrelation")]
    partial class addUserrelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UniversityHousing.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("UniversityHousing.Models.Admin", b =>
                {
                    b.Property<int>("adminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("adminId"), 1L, 1);

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("adminId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("UniversityHousing.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("adminId")
                        .HasColumnType("int");

                    b.Property<int>("requestStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("StudentId");

                    b.HasIndex("adminId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("UniversityHousing.Models.Faculty", b =>
                {
                    b.Property<byte>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("FacultyId"), 1L, 1);

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("FacultyId");

                    b.ToTable("Facultys");
                });

            modelBuilder.Entity("UniversityHousing.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("paymentValue")
                        .HasColumnType("float");

                    b.HasKey("PaymentId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("UniversityHousing.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"), 1L, 1);

                    b.Property<int>("AvailableOfBed")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfBed")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("RoomPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("UniversityHousing.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("StudentGrade")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte>("facultyId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("studentLevel")
                        .HasColumnType("tinyint");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("AddressId");

                    b.HasIndex("facultyId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("UniversityHousing.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("userId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("UniversityHousing.Models.Admin", b =>
                {
                    b.HasOne("UniversityHousing.Models.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("UniversityHousing.Models.Admin", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniversityHousing.Models.Booking", b =>
                {
                    b.HasOne("UniversityHousing.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityHousing.Models.Student", "Student")
                        .WithMany("Bookings")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityHousing.Models.Admin", "Admin")
                        .WithMany("Bookings")
                        .HasForeignKey("adminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Room");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniversityHousing.Models.Payment", b =>
                {
                    b.HasOne("UniversityHousing.Models.Booking", "Booking")
                        .WithOne("Payment")
                        .HasForeignKey("UniversityHousing.Models.Payment", "BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("UniversityHousing.Models.Student", b =>
                {
                    b.HasOne("UniversityHousing.Models.Address", "Address")
                        .WithMany("Students")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityHousing.Models.Faculty", "Faculty")
                        .WithMany("Students")
                        .HasForeignKey("facultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityHousing.Models.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("UniversityHousing.Models.Student", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Faculty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniversityHousing.Models.Address", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("UniversityHousing.Models.Admin", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("UniversityHousing.Models.Booking", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("UniversityHousing.Models.Faculty", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("UniversityHousing.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("UniversityHousing.Models.Student", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("UniversityHousing.Models.User", b =>
                {
                    b.Navigation("Admin")
                        .IsRequired();

                    b.Navigation("Student")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
